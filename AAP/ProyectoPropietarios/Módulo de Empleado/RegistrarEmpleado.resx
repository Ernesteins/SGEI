<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABgAAAAsQAAALIAAACyAAAAsgAAALIAAACyAAAAtgAAAGoAAAAAAAAABAAA
        AIUAAAC0AAAAsgAAALIAAACyAAAAsgAAALIAAACwAAAATQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAApQAA
        AAMAAAALAAAAzgAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATgAAAPEAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAC/AAAAFgAAACoAAADdAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA3wAAADcAAAAkAAAANAAA
        ADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAAdAAAAAAAAAAAAAAAMAAAAkQAAAPgAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAO0AAABEAAAAbAAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPMAAAByAAAAKAAA
        ANAAAAD7AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA/AAAAJ8AAAAAAAAAAAAAAAAAAAAQAAAAbwAA
        AM8AAAD5AAAA/wAAAP8AAAD/AAAA/wAAAH8AAACkAAAA/wAAAP8AAAD/AAAA/wAAAPcAAADHAAAAXgAA
        ACYAAACkAAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAsgAAAAAAAAAAAAAAAAAA
        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
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAALIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAALcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAUgAAALIAAADoAAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA5gAAALAAAABMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAADMAAAByAAAAtgAAAOIAAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAADhAAAAtAAAAG8AAAAxAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAANwAA
        AHEAAACzAAAA6QAAAPsAAAD/AAAA+gAAAOcAAACwAAAAbwAAADUAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABAAAAAtAAAAawAAAJkAAABoAAAAKwAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAB/wAAAf8AAAAAAAAAAAAAAAAAAAAAAAAAAMAAAADgAAAA+AAAAPAA
        AADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAD/gAAA/4AAAP+A
        AAD/gAAA/4AAAP+AAAD/gAAA//AAB//8AB8=
</value>
  </data>
</root>